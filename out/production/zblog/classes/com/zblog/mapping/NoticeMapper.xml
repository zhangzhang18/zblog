<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.com.zblog.dao.NoticeMapper" >
  <resultMap id="BaseResultMap" type="com.com.zblog.model.Notice" >
    <id column="noticeid" property="noticeid" jdbcType="INTEGER" />
    <id column="author" property="author" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="datetime" property="datetime" jdbcType="TIMESTAMP" />
    <result column="isshow" property="isshow" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.com.zblog.model.Notice" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    noticeid, author, title, datetime, isshow
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="com.com.zblog.model.NoticeKey" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from notice
    where noticeid = #{noticeid,jdbcType=INTEGER}
      and author = #{author,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.com.zblog.model.NoticeKey" >
    delete from notice
    where noticeid = #{noticeid,jdbcType=INTEGER}
      and author = #{author,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.com.zblog.model.Notice" >
    insert into notice (noticeid, author, title, 
      datetime, isshow, content
      )
    values (#{noticeid,jdbcType=INTEGER}, #{author,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{datetime,jdbcType=TIMESTAMP}, #{isshow,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.com.zblog.model.Notice" >
    insert into notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="noticeid != null" >
        noticeid,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="datetime != null" >
        datetime,
      </if>
      <if test="isshow != null" >
        isshow,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="noticeid != null" >
        #{noticeid,jdbcType=INTEGER},
      </if>
      <if test="author != null" >
        #{author,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="datetime != null" >
        #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isshow != null" >
        #{isshow,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.com.zblog.model.Notice" >
    update notice
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="datetime != null" >
        datetime = #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isshow != null" >
        isshow = #{isshow,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where noticeid = #{noticeid,jdbcType=INTEGER}
      and author = #{author,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.com.zblog.model.Notice" >
    update notice
    set title = #{title,jdbcType=VARCHAR},
      datetime = #{datetime,jdbcType=TIMESTAMP},
      isshow = #{isshow,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where noticeid = #{noticeid,jdbcType=INTEGER}
      and author = #{author,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.com.zblog.model.Notice" >
    update notice
    set title = #{title,jdbcType=VARCHAR},
      datetime = #{datetime,jdbcType=TIMESTAMP},
      isshow = #{isshow,jdbcType=INTEGER}
    where noticeid = #{noticeid,jdbcType=INTEGER}
      and author = #{author,jdbcType=INTEGER}
  </update>
</mapper>